<UserControl x:Class="LogInspect.Views.EventView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:views="clr-namespace:LogInspect.Views"
			 xmlns:vlbLib="clr-namespace:VirtualListBoxLib;assembly=VirtualListBoxLib"
			 xmlns:propertyVM="clr-namespace:LogInspect.ViewModels.Properties"
			 xmlns:models="clr-namespace:LogInspectLib;assembly=LogInspectLib"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

	<UserControl.Resources>
		<views:NotValueConverter x:Key="notValueConverter"/>

		<BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter"/>
		
		<DataTemplate DataType="{x:Type models:Property}">
			<TextBlock Text="{Binding Value}"/>
		</DataTemplate>
		
		
		<!--DataTemplate x:Key="propertyDataTemplate">
			<TextBlock Width="{Binding Column.Width}" Text="{Binding Value}" TextAlignment="{Binding Column.Alignment}" />
		</-->

		<DataTemplate DataType="{x:Type propertyVM:BookMarkPropertyViewModel}">
			<Border Width="{Binding Column.Width}" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
				<Image Source="/LogInspect;component/Images/Bookmark_16x.png" Stretch="None" HorizontalAlignment="Center" Visibility="{Binding Event.IsBookMarked,Converter={StaticResource booleanToVisibilityConverter}}"/>
			</Border>
		</DataTemplate>

		<DataTemplate DataType="{x:Type propertyVM:LinePropertyViewModel}">
			<TextBlock  Width="{Binding Column.Width}" Text="{Binding Value}" FontWeight="Bold" TextAlignment="{Binding Column.Alignment}" Foreground="SteelBlue" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
		</DataTemplate>

		<DataTemplate DataType="{x:Type propertyVM:TimeStampPropertyViewModel}">
			<TextBlock Width="{Binding Column.Width}" Text="{Binding Value}" TextAlignment="{Binding Column.Alignment}" TextTrimming="CharacterEllipsis"/>
		</DataTemplate>

		<DataTemplate DataType="{x:Type propertyVM:TextPropertyViewModel}">
			<TextBlock Width="{Binding Column.Width}" Text="{Binding Value}" TextAlignment="{Binding Column.Alignment}" TextTrimming="CharacterEllipsis"/>
		</DataTemplate>
		
		<DataTemplate x:Key="eventDataTemplate">
			<ItemsControl ItemsSource="{Binding Properties}" Background="{Binding Background}">
				<ItemsControl.ItemsPanel>
					<ItemsPanelTemplate>
						<StackPanel Orientation="Horizontal"/>
					</ItemsPanelTemplate>
				</ItemsControl.ItemsPanel>
			</ItemsControl>
		</DataTemplate>
		
	</UserControl.Resources>

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="*"/>
			<RowDefinition Height="7"/>
			<RowDefinition Height="150"/>
		</Grid.RowDefinitions>


		<views:ColumnsView Grid.Row="0"  DataContext="{Binding Columns}" HorizontalOffset="{Binding ElementName=listBox,Path=HorizontalOffset}" />

		<vlbLib:VirtualListBox Grid.Row="1" x:Name="listBox" IsEnabled="{Binding IsWorking,Converter={StaticResource notValueConverter}}"
			VirtualCollection="{Binding}" ItemsCount="{Binding  EventIndexer.IndexedEventsCount}"  
			ExtentWidth="{Binding Columns.TotalWidth}" ItemTemplate="{StaticResource eventDataTemplate}"
			SelectedItemIndex="{Binding SelectedItemIndex,Mode=TwoWay}" />
		
		<GridSplitter  Grid.Row="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
		<TextBox  Grid.Row="3" IsReadOnly="True"  AcceptsReturn="True" Text="{Binding SelectedItem.Lines,Mode=OneWay}"/>
	</Grid>
</UserControl>
